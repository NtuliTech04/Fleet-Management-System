@model FleetTours___Application.Models.PagedList<FleetTours___Application.Models.Booking>
@{
    ViewBag.Title = "Vehicle Bookings";
}
<style>
    .input-validation-error, .required {
        border-left: 5px solid #ee0000 !important;
    }

    .valid {
        border-left: 5px solid #00aa00 !important;
    }

    .field-validation-error {
        color: #990000;
    }

    .footer {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 60px;
        background-color: #f5f5f5;
    }

    tfoot {
        text-align: right;
    }

        tfoot > tr > td a:link {
            color: #fff;
            background-color: #333;
            padding: 5px 10px;
            border-radius: 7px;
        }
</style>
<div class="jumbotron">
    <div class="container">
        <h2 class="text-center"><u>Hired Vehicles</u></h2>
        @using (Html.BeginForm("Index", "Bookings", FormMethod.Get))
        {
            <div class="row">
                <div class="col-sm-8">
                    <div class="input-group">

                        <input type="text"
                               name="filter"
                               value="@ViewBag.filter"
                               class="form-control"
                               style="display: inline"
                               placeholder="Search by Email or Process Status" />

                        <span class="" style="display:flex;">
                            <button class="btn btn-default" type="submit">Search</button>
                        </span>

                    </div>
                </div>
            </div>

            <div style="margin-top:17px;">
                @{
                    var grid = new WebGrid(
                                canPage: true,
                                rowsPerPage: Model.PageSize,
                                canSort: true,
                                ajaxUpdateContainerId: "grid");

                    grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
                    grid.Pager(WebGridPagerModes.All);

                    @grid.GetHtml(htmlAttributes: new { id = "grid" },   // id for ajaxUpdateContainerId parameter
                    fillEmptyRows: false,
                    tableStyle: "table table-bordered table-hover",
                    mode: WebGridPagerModes.All,
                    columns: grid.Columns(
                      grid.Column("BookDetails.Vehicles.VehicleMake", "Brand"),
                      grid.Column("BookDetails.Vehicles.Model", "Model"/*, style: "col-lg-4"*/),
                      grid.Column("DateCreated", "Book Date", format: (item) => string.Format("{0:dd-MMM-yyyy}", item.DateCreated)),
                      grid.Column("BookDetails.VacationDate", "Hire Date", format: (item) => string.Format("{0:dd-MMM-yyyy}", item.BookDetails.VacationDate)),
                      grid.Column("BookDetails.ReturnDate", "Return Date", format: (item) => string.Format("{0:dd-MMM-yyyy}", item.BookDetails.ReturnDate)),
                      grid.Column("PaymentStatus", "Payment Status"/*, style: "col-lg-3"*/),
                      grid.Column("Status", "Process Status"/*, style: "col-lg-3"*/),
                      grid.Column("Driver", "Driver", format:
                                @<text>
                                    <div class="text-center">
                                        @if (item.Driver == "Assigned")
                                         {
                                            <a data-modal="" href="@Url.Action(actionName: "Details", controllerName: "Drivers", routeValues: new { id = item.DriverID })" id="btnCreate" class="btn btn-info">Details</a>
                                         }
                                         else
                                         {
                                            <label>Not Assigned</label>
                                         }
                                    </div>
                                </text>), grid.Column(header: "Action", canSort: false, style: "action", format: @<text>
                                <div class="text-center">
                                    @Html.Raw("<a style='text-decoration:none' class='btn btn-primary' href='/Bookings/details/" + item.BkID + "' id='" + item.BkID + "' title='Detail'>View</a>")
                                </div>
                                </text>)));
                }
            </div>
        }
    </div>
</div>


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/scripts/appjs/phones.js")
}
