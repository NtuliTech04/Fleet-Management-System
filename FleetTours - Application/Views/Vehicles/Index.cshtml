@model FleetTours___Application.Models.PagedList<FleetTours___Application.Models.Vehicle>
@{
    ViewBag.Title = "Vehicle List";
}
<style>
    .input-validation-error, .required {
        border-left: 5px solid #ee0000 !important;
    }

    .valid {
        border-left: 5px solid #00aa00 !important;
    }

    .field-validation-error {
        color: #990000;
    }

    .footer {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 60px;
        background-color: #f5f5f5;
    }

    tfoot {
        text-align: right;
    }

        tfoot > tr > td a:link {
            color: #fff;
            background-color: #333;
            padding: 5px 10px;
            border-radius: 7px;
        }
</style>
<div class="jumbotron">
    <div class="container">
        <h2 class="text-center"><u>List of All Vehicles</u></h2>
        @using (Html.BeginForm("Index", "Vehicles", FormMethod.Get))
        {
            <div class="row">
                <div class="col-sm-8">
                    <div class="input-group">

                        <input type="text"
                               name="filter"
                               value="@ViewBag.filter"
                               class="form-control"
                               style="display: inline"
                               placeholder="Search by Brand or Duty" />

                        <span class="" style="display:flex;">
                            <button class="btn btn-default" type="submit">Search</button>
                        </span>

                    </div>
                </div>
                <div class="pull-right col-lg-1">
                    <a class="btn btn-success" data-modal="" href="@Url.Action("Create","Vehicles")" id="btnCreate">
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </div>
            </div>

            <div style="margin-top:17px;">
                @{
                    var grid = new WebGrid(
                                canPage: true,
                                rowsPerPage: Model.PageSize,
                                canSort: true,
                                ajaxUpdateContainerId: "grid");

                    grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
                    grid.Pager(WebGridPagerModes.All);

                    @grid.GetHtml(htmlAttributes: new { id = "grid" },   // id for ajaxUpdateContainerId parameter
                    fillEmptyRows: false,
                    tableStyle: "table table-bordered table-hover",
                    mode: WebGridPagerModes.All,
                    columns: grid.Columns(
                      //grid.Column("VehicleID", "ID"),
                      grid.Column("RegNo", "Registration"/*, style: "col-lg-4"*/),
                      grid.Column("VehicleMake", "Brand"/*, style: "col-lg-3"*/),
                      grid.Column("Model", "Model"/*, style: "col-lg-3"*/),
                      grid.Column("Type", "Type"/*, style: "col-lg-3"*/),
                      grid.Column("Capacity", "Capacity"/*, style: "col-lg-3"*/),
                      grid.Column("VehicleImage", "Image", format:
                                                    @<text>
                                                        @if (item.VehicleImage != null)
                                                         {
                                                             var base64 = Convert.ToBase64String(item.VehicleImage);
                                                             var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                                            <img src='@imgsrc' style="width:120px;height:90px" />
                                                         }
                                                    </text>),
                   grid.Column("Duty", "Duty"/*, style: "col-lg-3"*/),
                   grid.Column("Status", "Status"/*, style: "col-lg-3"*/),
                   grid.Column("Driver", "Driver", format:

                        @<text>
                                <div class="text-center" style="margin-top:5vh;">
                                        @if (item.Driver == "Assigned")
                                         {
                                             <a data-modal="" href="@Url.Action(actionName: "Details", controllerName: "Drivers", routeValues: new { id = item.DriverID })" id="btnCreate" class="btn btn-primary">Details</a>
                                         }
                                         else
                                         {
                                             <label>Not Assigned</label>
                                         }
                                </div>
                        </text>),

                  grid.Column(header: "Action", canSort: false, style: "action", format: @<text><div class="text-center">
                    @Html.Raw("<a data-modal='' href='/Vehicles/details/" + item.VehicleID + "' id='" + item.VehicleID + "' title='Detail'> <span class='glyphicon glyphicon-search'> </span> </a>")&nbsp;
                    @Html.Raw("<a data-modal='' href='/Vehicles/edit/" + item.VehicleID + "' id='" + item.VehicleID + "' title='Edit'> <span class='glyphicon glyphicon-edit'> </span> </a>")&nbsp;
                    @Html.Raw("<a data-modal='' href='/Vehicles/delete/" + item.VehicleID + "' id='" + item.VehicleID + "' title='Delete'> <span class='glyphicon glyphicon-trash'> </span> </a>")
                </div></text>)));
                }
            </div>
        }
    </div>
</div>

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/scripts/appjs/phones.js")
}
