@model FleetTours___Application.Models.Booking
@{
    ViewBag.Title = "Pick-Up Location";
}
<style>
    #map {
        height: 100vh;
        width: 100%;
    }

    #directionpanel {
        width: 100%;
        height: 100vh;
        overflow: auto;
    }

    html, body {
        height: 100%;
        margin-top: 4vh;
        padding: 0;
    }
</style>

<input value="@ViewBag.PickUp" id="end" type="text" hidden="hidden" readonly="readonly" />

<table class="table table-bordered">
    <tr>
        <th style="width:70%;">
            <div id="map">
            </div>
        </th>
        <th style="width:30%;">
            <div id="directionpanel">
            </div>
        </th>
    </tr>
</table>
@if (Model.Status == "On Pick-Up")
{
    <div class="text-center" style="margin-top:4vh;">
        @Html.ActionLink("Confirm Arrival", "ConfirmPickUp", "DriversDashboard", new { id = Model.BkID }, new { @class = "btn btn-primary" })
    </div>
}

<script>
    function initMap() {

        // Try HTML5 geolocation.
        if (navigator.geolocation) {

            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                window.pos = pos;

                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                //  ourOrigin = new google.maps.LatLng(pos.lat, pos.lng);
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 17,
                    center: { lat: pos.lat, lng: pos.lng }
                });

                directionsDisplay.setMap(map);
                calculateAndDisplayRoute(directionsService, directionsDisplay);
                directionsDisplay.setPanel(document.getElementById('directionpanel'));
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {

        console.log("Testing : " + pos);

        directionsService.route({
            origin: new google.maps.LatLng(pos.lat, pos.lng),
            destination: document.getElementById('end').value,
            travelMode: 'DRIVING'
        }, function (response, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(response);
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA64GjWvP5X1IbrWXvNpu2P-7Tl8uFR6FE&callback=initMap"></script>

