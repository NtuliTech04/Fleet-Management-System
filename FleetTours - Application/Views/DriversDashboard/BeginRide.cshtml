@model FleetTours___Application.Models.Ride

@{
    ViewBag.Title = "Begin Ride";
}

<style>
    #map {
        height: 100vh;
        width: 100%;
    }

    #directionpanel {
        width: 100%;
        height: 100vh;
        overflow: auto;
    }

    html, body {
        height: 100%;
        margin-top: 4vh;
        padding: 0;
    }
</style>
<input value="@Html.DisplayFor(model => model.RideAddress.PickUp)" id="start" type="text" hidden="hidden" readonly="readonly" />
<input value="@Html.DisplayFor(model => model.RideAddress.Destination)" id="end" type="text" hidden="hidden" readonly="readonly" />

<table class="table table-bordered">
    <tr>
        <th style="width:70%;">
            <div id="map">
            </div>
        </th>
        <th style="width:30%;">
            <div id="directionpanel">
            </div>
        </th>
    </tr>
</table>

<div class="text-center" style="margin-top:4vh;">
    @Html.ActionLink("Arrived At Destination - End Ride", "RideComplete", "DriversDashboard", new { id = Model.RideID }, new { @class = "btn btn-primary" })
</div>

<script>
    function initMap() {
        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var map = new google.maps.Map(document.getElementById("map"), {
            zoom: 17,
            center: { lat: -29.8587, lng: 31.0218 },
        });

        directionsDisplay.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsDisplay);
        directionsDisplay.setPanel(document.getElementById('directionpanel'));
    }

    function calculateAndDisplayRoute(directionsService, directionsRenderer) {

        console.log("Testing: " + document.getElementById("start").value)
        directionsService.route({
            origin: document.getElementById("start").value,
            destination: document.getElementById("end").value,
            travelMode: google.maps.TravelMode.DRIVING,
        }, function (response, status) {
            if (status === 'OK') {
                directionsRenderer.setDirections(response);
                document.getElementById('distance').innerHTML = 'Total travel distance is: ' + (response.routes[0].legs[0].distance.value / 1000).toFixed(2) + " km";
                document.getElementById('spanTime').innerHTML = response.routes[0].legs[0].duration.text;
            }
            else {
                window.alert("Directions request failed due to " + status);
            }
        });
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA64GjWvP5X1IbrWXvNpu2P-7Tl8uFR6FE&callback=initMap"></script>

